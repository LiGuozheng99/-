# coding=gbk;
def compute_fx(x, y):
    return y - 2 * x / y


x0 = 0
y0 = 1
h = 0.1
N = 100


def Modified_Euler(x_initial, y_initial, h1, N1):
    n = 0
    y1 = []  # 用来记录矫正之后的y的值
    while n < N1:
        n += 1
        # 先计算预测 再计算校正
        # 这是预测
        x1 = x_initial + h1
        y1_pre = y_initial + h1 * compute_fx(x_initial, y_initial)
        # 这是校正
        y1_modify = y_initial + (compute_fx(x_initial, y_initial) + compute_fx(x1, y1_pre)) * h1 / 2
        y1.append(y1_modify)
        x_initial = x1
        y_initial = y1_modify
    return y1


result = Modified_Euler(x0, y0, h, N)
for i in range(1, int(N) + 1):
    X = x0 + h * i
    print("{x:.3f}  -->  {y:.5f}".format(x=X, y=result[i - 1]))
